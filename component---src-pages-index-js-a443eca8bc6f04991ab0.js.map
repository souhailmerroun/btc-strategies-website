{"version":3,"file":"component---src-pages-index-js-a443eca8bc6f04991ab0.js","mappings":"6LAmCA,MAhCe,QAAC,UAAEA,GAAW,SAC3B,uBAAKC,UAAU,iDACb,uBAAKA,UAAU,mBACb,gBAAC,EAAAC,KAAI,CAACD,UAAU,eAAeE,GAAG,KAAKH,GACvC,0BACEC,UAAU,iBACVG,KAAK,SACL,iBAAe,WACf,iBAAe,aACf,gBAAc,YACd,gBAAc,QACd,aAAW,qBAEX,wBAAMH,UAAU,yBAElB,uBAAKA,UAAU,2BAA2BI,GAAG,aAC3C,sBAAIJ,UAAU,cAAa,IACzB,sBAAIA,UAAU,YACZ,gBAAC,EAAAC,KAAI,CAACD,UAAU,WAAWE,GAAG,2BAA0B,QAE1D,sBAAIF,UAAU,YACZ,gBAAC,EAAAC,KAAI,CAACD,UAAU,WAAWE,GAAG,2BAA0B,QAE1D,sBAAIF,UAAU,YACZ,gBAAC,EAAAC,KAAI,CAACD,UAAU,WAAWE,GAAG,2BAA0B,WAK5D,ECkBR,MArCe,IAAmB,IAAD,MAAjB,SAAEG,GAAU,EAC1B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,EAAM,CAACR,WAAiC,QAAtB,EAAAO,EAAKE,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,UAChD,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOT,GACP,0BACEM,MAAO,CACLI,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,gBAC5B,IACA,qBAAGC,KAAK,4BAA2B,YAGtC,C,+CCFP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAEC,EAAW,MAAEV,EAAK,SAAEL,GAAU,EAC3C,MAAM,KAAEG,IAASD,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBD,GAAeZ,EAAKC,aAAaW,YACnDE,EAAgC,QAApB,EAAGd,EAAKC,oBAAY,aAAjB,EAAmBC,MAExC,OACE,gCACE,6BAAQY,EAAkBZ,EAAK,MAAMY,EAAiBZ,GACtD,wBAAMa,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASd,IACnC,wBAAMe,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAhB,EAAKC,oBAAY,aAAjB,EAAmBiB,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASd,IACpC,wBAAMa,KAAK,sBAAsBC,QAASH,IACzChB,EAGP,C,6GCpCA,MAMasB,EAAO,IAAM,gBAAC,IAAG,CAACjB,MAAM,aAErC,UARiB,IACf,gBAAC,IAAM,KACL,0BAAI,M","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst Header = ({ siteTitle }) => (\n  <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <div className=\"container-fluid\">\n      <Link className=\"navbar-brand\" to=\"/\">{siteTitle}</Link>\n      <button \n        className=\"navbar-toggler\" \n        type=\"button\" \n        data-bs-toggle=\"collapse\" \n        data-bs-target=\"#navbarNav\" \n        aria-controls=\"navbarNav\" \n        aria-expanded=\"false\" \n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n        <ul className=\"navbar-nav\"> {/* ms-auto to push nav to the right */}\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/technical-analysis/btc\">BTC</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/technical-analysis/eth\">ETH</Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\" to=\"/technical-analysis/sol\">SOL</Link>\n          </li>\n        </ul>\n      </div>\n    </div>\n  </nav>\n);\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst Homepage = () => (\n  <Layout>\n    <h1>Hi</h1>\n  </Layout>\n)\n\nexport const Head = () => <Seo title=\"Page One\" />\n\nexport default Homepage\n"],"names":["siteTitle","className","Link","to","type","id","children","data","useStaticQuery","site","siteMetadata","title","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","href","description","metaDescription","defaultTitle","name","content","property","author","Head"],"sourceRoot":""}